%matplotlib inline   ==> Inline means Incorporated into a body of text rather than placed as a separate section.
Q) diff between :'<matplotlib.figure.Figure at 0x110b9c450>' and ' <matplotlib.text.Text at 0x94f9320>'
    your code snippet should not produce <matplotlib.figure.Figure at 0x110b9c450> but <matplotlib.text.Text at 0x94f9320> (because your last line is printing a title)


1)why Pandas ?
    Pandas are build up on top of NumPy, so most of the NumPy advantages still hold true.
    However, it uniquely enables ingestion and manipulation of heterogeneous data types in an intuitive fashion.
    Pandas also enables combining large data sets using merge and join.
    And it provides a very efficient library for breaking data sets, transforming, and recombining.
    Another great feature Pandas provides is its visualizations.
    Plugged-in data has been simplified in-built functions that come with data frame.
    And descriptive statistics, by using simple function,is another good part of Pandas.This capability really simplifies the exploratory data analysis.
    Additionally, Pandas library handles time-series data effectively via native methods it provides to ingest, transform, and analyze time-series data.
    Other benefits to using Pandas are the ability to take advantage of native methods to handle missing data and data pivoting,easy data sorting, and description capabilities,fast generation of data plots,and Boolean indexing for fast image processing and other masking operations, just to name a few.
    If you're looking for a functionality to perform some data transformation,chances are Pandas already has it.
It provides almost all major data-wrangling capabilities that data scientists need(like import,transform and virtualize data).
2)How it dos this ?
    Pandas achieves this thanks to two data structures.Namely, a)pandas Series and b)pandas DataFrame.
    Pandas Series:
        A series is one one-dimensional array-like object that provides us with many ways to index data.
        Series acts like an ndarray,but it supports many data types like int,string,float,Python objects etc as a part of the array.
        It is a valid argument to most NumPy methods because of its similarities to arrays.
        The axis labels are collectively referred to as the index,and we can get and set values by these index labels.
    So a series is like a fit sized dictionary in this regard.
    we use pandas DataFrame data structure(DS) more compared to seried DS .
    Pandas DataFrame:
        A DataFrame is a 2-D elastic labelled DS that supports heterogeneous data (with labeled axis for rows and columns).
        Arithmetic operations can appear on both row and column labels.
        We can think of it as a container/dictionary for series objects,where each row is a series.


    
